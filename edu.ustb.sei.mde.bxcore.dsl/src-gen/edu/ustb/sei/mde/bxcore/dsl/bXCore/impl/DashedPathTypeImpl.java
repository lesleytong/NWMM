/**
 * generated by Xtext 2.18.0.M3
 */
package edu.ustb.sei.mde.bxcore.dsl.bXCore.impl;

import edu.ustb.sei.mde.bxcore.dsl.bXCore.BXCorePackage;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.DashedPathType;
import edu.ustb.sei.mde.bxcore.dsl.bXCore.DashedPathTypeSegment;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dashed Path Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.ustb.sei.mde.bxcore.dsl.bXCore.impl.DashedPathTypeImpl#getSegment <em>Segment</em>}</li>
 *   <li>{@link edu.ustb.sei.mde.bxcore.dsl.bXCore.impl.DashedPathTypeImpl#getNext <em>Next</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DashedPathTypeImpl extends MinimalEObjectImpl.Container implements DashedPathType
{
  /**
   * The cached value of the '{@link #getSegment() <em>Segment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSegment()
   * @generated
   * @ordered
   */
  protected DashedPathTypeSegment segment;

  /**
   * The cached value of the '{@link #getNext() <em>Next</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNext()
   * @generated
   * @ordered
   */
  protected DashedPathType next;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DashedPathTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BXCorePackage.Literals.DASHED_PATH_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DashedPathTypeSegment getSegment()
  {
    return segment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSegment(DashedPathTypeSegment newSegment, NotificationChain msgs)
  {
    DashedPathTypeSegment oldSegment = segment;
    segment = newSegment;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BXCorePackage.DASHED_PATH_TYPE__SEGMENT, oldSegment, newSegment);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSegment(DashedPathTypeSegment newSegment)
  {
    if (newSegment != segment)
    {
      NotificationChain msgs = null;
      if (segment != null)
        msgs = ((InternalEObject)segment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BXCorePackage.DASHED_PATH_TYPE__SEGMENT, null, msgs);
      if (newSegment != null)
        msgs = ((InternalEObject)newSegment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BXCorePackage.DASHED_PATH_TYPE__SEGMENT, null, msgs);
      msgs = basicSetSegment(newSegment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BXCorePackage.DASHED_PATH_TYPE__SEGMENT, newSegment, newSegment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DashedPathType getNext()
  {
    return next;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNext(DashedPathType newNext, NotificationChain msgs)
  {
    DashedPathType oldNext = next;
    next = newNext;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BXCorePackage.DASHED_PATH_TYPE__NEXT, oldNext, newNext);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNext(DashedPathType newNext)
  {
    if (newNext != next)
    {
      NotificationChain msgs = null;
      if (next != null)
        msgs = ((InternalEObject)next).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BXCorePackage.DASHED_PATH_TYPE__NEXT, null, msgs);
      if (newNext != null)
        msgs = ((InternalEObject)newNext).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BXCorePackage.DASHED_PATH_TYPE__NEXT, null, msgs);
      msgs = basicSetNext(newNext, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BXCorePackage.DASHED_PATH_TYPE__NEXT, newNext, newNext));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BXCorePackage.DASHED_PATH_TYPE__SEGMENT:
        return basicSetSegment(null, msgs);
      case BXCorePackage.DASHED_PATH_TYPE__NEXT:
        return basicSetNext(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BXCorePackage.DASHED_PATH_TYPE__SEGMENT:
        return getSegment();
      case BXCorePackage.DASHED_PATH_TYPE__NEXT:
        return getNext();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BXCorePackage.DASHED_PATH_TYPE__SEGMENT:
        setSegment((DashedPathTypeSegment)newValue);
        return;
      case BXCorePackage.DASHED_PATH_TYPE__NEXT:
        setNext((DashedPathType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BXCorePackage.DASHED_PATH_TYPE__SEGMENT:
        setSegment((DashedPathTypeSegment)null);
        return;
      case BXCorePackage.DASHED_PATH_TYPE__NEXT:
        setNext((DashedPathType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BXCorePackage.DASHED_PATH_TYPE__SEGMENT:
        return segment != null;
      case BXCorePackage.DASHED_PATH_TYPE__NEXT:
        return next != null;
    }
    return super.eIsSet(featureID);
  }

} //DashedPathTypeImpl
